/*
 * An example template file
 */

// - A template file consists of one or more modules.
// - A module consists of one or more type declarations.
// - Non-primitive type and module names are camel-case with an initial upper-case letter.
// - Any type can be marked as optional (Maybe in PureScript, Option in Scala)
// - Any type can be tagged with wrap (newtype in PureScript, Scalaz @@ in Scala)
//
// The following primitive types are supported:
//   - boolean
//   - int
//   - decimal
//   - string
//
// Record types:
//   - Contain one one or more properties.
//   - Property names are camel-case with an initial lower-case letter.
//   - Record types must be given a name to be nested within a record or used
//     in an array type.
//

module County /* <scala package="gov.wicourts.codegen"> <purs modulePrefix="Ccap.Codegen"> */ {
  type CountyNo: Domains.CountyNoT
  type CountyName: string <validations maxLength="32">
  type OtherCountyName: wrap string <validations maxLength="32">
  type AssessFacilityId: wrap int
  type SomethingMoney: wrap decimal

  type County: {
    countyNo: Domains.CountyNoT
    countyNoX: CountyNo
    countyName: CountyName
    assessFacilityId: optional AssessFacilityId
    soapPort: int
  }

  type Big: {
    a1: int
    b1: string
    c1: decimal
    d1: boolean
    a2: int
    b2: string
    c2: decimal
    d2: boolean
    a3: int
    b3: string
    c3: decimal
    d3: boolean
    a4: int
    b4: string
    c4: decimal
    d4: boolean
  }

  type Response: {
    counties: array County
  }

  type CountyEnum: [
    | Adams
    | Ashland
    | Baron
    | Etc
  ]

  // A date, encoded per RFC 3339.
  type Date: wrap string
    <validations maxLength="32">
    <scala
      t="org.joda.time.LocalDate"
      decode="Decoder.date"
      encode="gov.wicourts.common.LocalDateOps.sortableDateFormat.print">
    <purs
      t="Ccap.Common.DateTime.Date.Date"
      decode="Ccap.Common.DateTime.Date.fromIsoMadison"
      encode="Ccap.Common.DateTime.Date.inIso8601ExtendedDateFormat">

  type Mydate: wrap Date
}
